---
import AccountDropdown from './AccountDropdown.tsx'
import FullScreenMenu from './FullScreenMenu.astro'
import LoginIcon from './LoginIcon.astro'
import NavigationLinks from './NavigationLinks.astro'
import TextLogo from './TextLogo.astro'

const user = Astro.locals.user
const name = user?.name
const picture_uri = user?.picture_uri
---

<style>
  #menuIcon {
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
  }

  #closeIcon {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
</style>

<header
  class='sticky left-0 top-0 z-30 flex w-full justify-between bg-slate-200 px-4 py-1 shadow-md sm:gap-8'
>
  <button id='menuButton' class='w-8 sm:hidden'>
    <span id='menuIcon' class='text-2xl text-eerie'>&#9776;</span>
    <span id='closeIcon' class='hidden text-4xl text-eerie'>&times;</span>
  </button>
  <TextLogo />
  <div class='hidden items-center sm:flex'>
    <nav class='space-x-4'>
      <NavigationLinks />
    </nav>
  </div>
  <div class='flex items-center sm:ml-auto'>
    {
      !user && (
        <a href='/login' class='flex items-center gap-2 text-eerie'>
          <span class='hidden text-sm text-eerie sm:flex'>Sign In</span>
          <LoginIcon />
        </a>
      )
    }
    {
      user && (
        <AccountDropdown client:load>
          <div class='flex items-center gap-2'>
            <span class='hidden text-sm text-eerie lg:flex'>{name}</span>
            <img
              src={picture_uri}
              class='size-9 rounded-full border-2 border-liberty'
            />
          </div>
        </AccountDropdown>
      )
    }
  </div>
</header>
<FullScreenMenu />

<script>
  import { $ } from '../lib/dom-selector'

  const body = document.body
  const menuButton = $('#menuButton')
  const menuIcon = $('#menuIcon')
  const closeIcon = $('#closeIcon')
  const fullScreenMenu = $('#fullScreenMenu')
  const mainContainer = $('#main')

  menuButton?.addEventListener('click', () => {
    const isMenuOpen = fullScreenMenu?.classList.contains('menu-active')
    if (!(closeIcon && menuIcon)) return
    fullScreenMenu?.classList.toggle('menu-active')
    // Toggle no-scroll and blur based on menu state
    body.classList.toggle('overflow-hidden', !isMenuOpen)
    mainContainer?.classList.toggle('blur', !isMenuOpen)
    if (isMenuOpen) {
      // Close menu: Show menu icon after close icon fades out
      closeIcon.style.opacity = '0'
      closeIcon.classList.add('hidden')
      menuIcon.classList.remove('hidden')
      setTimeout(() => {
        menuIcon.style.opacity = '1'
      }, 300)
    } else {
      // Open menu: Show close icon after menu icon fades out
      menuIcon.style.opacity = '0'
      closeIcon.classList.remove('hidden')
      menuIcon.classList.add('hidden')
      setTimeout(() => {
        closeIcon.style.opacity = '1'
      }, 300)
    }
  })

  window.addEventListener('resize', () => {
    if (window.innerWidth >= 640) {
      // Assuming 640px is the breakpoint for `sm:` classes
      fullScreenMenu?.classList.remove('menu-active')
      body.classList.remove('overflow-hidden')
      mainContainer?.classList.remove('blur')
      // Ensure icons are reset to their default states
      if (closeIcon && menuIcon) {
        closeIcon.style.opacity = '0'
        closeIcon.classList.add('hidden')
        menuIcon.classList.remove('hidden')
        menuIcon.style.opacity = '1'
      }
    }
  })
</script>
